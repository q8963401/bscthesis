#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass extbook
\options a4paper,11pt,oneside
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
fix-cm
fixltx2e
minimalistic
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman charter
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex8
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Ausführliche Darstellung eines klassischen Systems der probabilistischen
 epistemischen Logik und Beschreibung neuerer Entwicklungen
\begin_inset Newline linebreak
\end_inset


\begin_inset Newline linebreak
\end_inset


\size larger
Bachelorarbeit (Draft)
\end_layout

\begin_layout Author
David Baldin
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Part*
Inhaltsverzeichnis
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Section
Motivation und Ziel der Arbeit 
\end_layout

\begin_layout Section
Allgemeine Einführung in die Thematik
\end_layout

\begin_layout Standard
[Anschauliche Einführung der Begriffe Aussagenlogik, Modallogik, Wahrscheinlichk
eit, Ungewissheit, Glauben/Wissen, Agenten, Wissensrepräsentation und Dynamiken]
\end_layout

\begin_layout Section
Allgemeine Vereinbarungen 
\end_layout

\begin_layout Description
Alphabet Ein Alphabet 
\begin_inset Formula $\Sigma$
\end_inset

 ist eine nichtleer, endlich Menge.
\end_layout

\begin_layout Description
Kleenesche
\begin_inset space \thinspace{}
\end_inset

Hülle
\begin_inset space \thinspace{}
\end_inset

/
\begin_inset space \thinspace{}
\end_inset

Abschluss Sei 
\begin_inset Formula $\Sigma$
\end_inset

 ein Alphabet und bezeichne 
\begin_inset Formula $\epsilon$
\end_inset

 das leere Wort.
 Der Abschluss 
\begin_inset Formula $\Sigma^{*}$
\end_inset

 ist induktiv wie folgt definiert: 
\end_layout

\begin_deeper
\begin_layout Itemize
Induktionsanfang: 
\begin_inset Formula $\epsilon\in\Sigma^{*}$
\end_inset


\end_layout

\begin_layout Itemize
Induktionsschritt: 
\begin_inset Formula $(\alpha\in\Sigma^{*}\wedge\beta\in\Sigma)\Rightarrow\alpha\beta\in\Sigma$
\end_inset

.
\end_layout

\begin_layout Standard
(
\begin_inset Formula $\Sigma^{*}$
\end_inset

 ist damit die Menge aller Folgen von Elementen aus 
\begin_inset Formula $\Sigma$
\end_inset

)
\end_layout

\end_deeper
\begin_layout Description
Sprache Eine Sprache über einem Alphabet 
\begin_inset Formula $\Sigma$
\end_inset

 ist eine Teilmenge von 
\begin_inset Formula $\Sigma^{*}$
\end_inset


\end_layout

\begin_layout Description
Operationen
\begin_inset space \thinspace{}
\end_inset

auf
\begin_inset space \thinspace{}
\end_inset

Sprachen Seien 
\begin_inset Formula $L_{1},L_{2}$
\end_inset

 Sprachen über einem Alphabet 
\begin_inset Formula $\Sigma$
\end_inset


\end_layout

\begin_deeper
\begin_layout Description
Positive
\begin_inset space \thinspace{}
\end_inset

Hülle
\begin_inset space \thinspace{}
\end_inset

/
\begin_inset space \thinspace{}
\end_inset

Positiver
\begin_inset space \thinspace{}
\end_inset

Abschluss Ist definiert als 
\begin_inset Formula $\Sigma^{+}:=\Sigma^{*}\setminus\left\{ \epsilon\right\} $
\end_inset


\end_layout

\begin_layout Description
Konkatenation Ist definiert als 
\begin_inset Formula $L_{1}L_{2}:=\left\{ \alpha,\beta|\alpha\in L_{1},\beta\in L_{2}\right\} $
\end_inset


\end_layout

\begin_layout Description
Mengenoperationen Das 
\begin_inset Formula $L_{1},L_{2}$
\end_inset

 Mengen sind, gelten die üblichen Mengenoperationen (
\begin_inset Formula $\cup,\cap,\setminus,\triangle$
\end_inset

).
\end_layout

\end_deeper
\begin_layout Description
Reguläre
\begin_inset space \thinspace{}
\end_inset

Sprache Eine reguläre Sprache über 
\begin_inset Formula $\Sigma$
\end_inset

 wird durch folgende Regeln induktiv definiert: 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\emptyset$
\end_inset

 und 
\begin_inset Formula $\left\{ \epsilon\right\} $
\end_inset

 sind reguläre Sprachen.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall a\in\Sigma:$
\end_inset

 
\begin_inset Formula $\left\{ a\right\} $
\end_inset

 ist eine reguläre Sprache
\end_layout

\begin_layout Itemize
Seien 
\begin_inset Formula $R$
\end_inset

 und 
\begin_inset Formula $S$
\end_inset

 reguläre Sprachen, dann sind auch 
\begin_inset Formula $R\cup S$
\end_inset

, 
\begin_inset Formula $RS$
\end_inset

 und 
\begin_inset Formula $R^{*}$
\end_inset

 reguläre Sprachen
\end_layout

\begin_layout Itemize
Nichts sonst ist eine reguläre Sprache über 
\begin_inset Formula $\Sigma$
\end_inset


\end_layout

\end_deeper
\begin_layout Description
Kontextfreie
\begin_inset space \thinspace{}
\end_inset

Grammatik Eine kontextfreie Grammatik ist ein 4-Tupel 
\begin_inset Formula $G=(N,\Sigma,P,S)$
\end_inset

 bestehend aus:
\end_layout

\begin_deeper
\begin_layout Description
\begin_inset Formula $N$
\end_inset

 ist ein Alphabet aus sogenannten Nichtterminalen
\end_layout

\begin_layout Description
\begin_inset Formula $\Sigma$
\end_inset

 ist ein Alphabet aus sogenannten Terminale mit 
\begin_inset Formula $V\cap\Sigma=\emptyset$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $P\subseteq N\times(N\cup\Sigma)^{*}$
\end_inset

 ist eine Menge sogenannter Produktionsregeln.
 Eine Produktionsregel 
\begin_inset Formula $(A,\alpha)\in P$
\end_inset

 wird notiert als 
\begin_inset Formula $A\to\alpha$
\end_inset

.
 Mehrere Regeln mit dem gleichen Nichtterminal 
\begin_inset Formula $(A,\alpha),(A,\beta),\cdots\in P$
\end_inset

 werden notiert als 
\begin_inset Formula $A\to\alpha\thinspace|\thinspace\beta\thinspace|\thinspace\cdots$
\end_inset

.
 Die Produktionsregel 
\begin_inset Formula $A\to\alpha$
\end_inset

 angewendet auf ein Wort 
\begin_inset Formula $\beta\in(N\cup\Sigma)^{*}$
\end_inset

 besagt, dass man ein Auftreten von 
\begin_inset Formula $A$
\end_inset

 in 
\begin_inset Formula $\beta$
\end_inset

 durch 
\begin_inset Formula $\alpha$
\end_inset

 ersetzen darf.
\end_layout

\end_deeper
\begin_layout Description
Erzeugte
\begin_inset space \thinspace{}
\end_inset

Sprache Sei 
\begin_inset Formula $G=(N,\Sigma,P,S)$
\end_inset

 eine kontextfreie Grammatik.
 Die von 
\begin_inset Formula $G$
\end_inset

 erzeugte Sprache ist 
\begin_inset Formula $L(G)={w\in\Sigma^{*}|}$
\end_inset

.
 Ein Wort 
\begin_inset Formula $w\in L(G)$
\end_inset

 heißt Satz.
\begin_inset CommandInset citation
LatexCommand cite
key "Gueting2013"

\end_inset


\end_layout

\begin_layout Chapter
Darstellung eines klassischen Systems der Wissenslogik mit Wahrscheinlichkeiten
\end_layout

\begin_layout Section
Formalisierung der Aussagenlogik
\end_layout

\begin_layout Standard
Logische Aussagen lassen sich natürlichsprachlich formulieren.
 Bspw.
 kann ein Chemiker Folgendes feststellen 
\begin_inset CommandInset citation
LatexCommand cite
key "Enderton2001"

\end_inset

: 
\begin_inset Quotes gld
\end_inset

Die Probe enthält Kalium
\begin_inset Quotes grd
\end_inset

.
 Dies lässt sich durch ein Aussagesymbol, bspw.
 
\begin_inset Formula $K$
\end_inset

 festhalten.
 Die Verneinung der Aussage lässt sich Symbolisch durch 
\begin_inset Formula $\neg K$
\end_inset

 darstellen.
 Dabei kehrt das Symbol 
\begin_inset Formula $\neg$
\end_inset

 den Wahrheitswert des Nachfolgenden um.
 Damit lautet der Satz 
\begin_inset Quotes gld
\end_inset

Es ist nicht wahr, dass die Probe Kalium enthält
\begin_inset Quotes grd
\end_inset

.
 Eine weitere Aussage kann lauten 
\begin_inset Quotes gld
\end_inset

Die Probe enthält Chlor
\begin_inset Quotes grd
\end_inset

 und lässt sich durch ein Aussagesymbol 
\begin_inset Formula $C$
\end_inset

 festhalten.
 Der Chemiker könnten nun Folgendes feststellen: 
\begin_inset Formula $\mathcal{A}:$
\end_inset

 
\begin_inset Quotes gld
\end_inset

Wenn die Probe Kalium enthält, enthält die Probe kein Chlor
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Formula $\mathcal{B}:$
\end_inset


\begin_inset Quotes gld
\end_inset

Die Probe enthält Kalium und Chlor
\begin_inset Quotes grd
\end_inset

 oder 
\begin_inset Formula $\mathcal{C}:$
\end_inset


\begin_inset Quotes gld
\end_inset

Die Probe enthält kein Chlor oder kein Kalium
\begin_inset Quotes grd
\end_inset

 oder aber 
\begin_inset Formula $\mathcal{D}:$
\end_inset

 
\begin_inset Quotes gld
\end_inset

Die Probe enthält weder Chlor noch Kalium
\begin_inset Quotes grd
\end_inset

.
 Für die Feststellungen 
\begin_inset Formula $\mathcal{C}$
\end_inset

 und 
\begin_inset Formula $\mathcal{D}$
\end_inset

 kann eine Interpretation des Wahrheitswertes ggf.
 zu Missverständnissen führen.
 Stellt der Chemiker fest, dass 
\begin_inset Formula $\mathcal{C}$
\end_inset

 gilt, kann dann die Probe weder Kalium noch Chlor enthalten? Meint die
 Feststellung 
\begin_inset Formula $\mathcal{C}$
\end_inset

 das gleiche wie 
\begin_inset Formula $\mathcal{D}$
\end_inset

? Mit einem Symbol 
\begin_inset Formula $\wedge$
\end_inset

 für das Wort 
\begin_inset Quotes gld
\end_inset

und
\begin_inset Quotes grd
\end_inset

, einem Symbol 
\begin_inset Formula $\vee$
\end_inset

 für das Wort 
\begin_inset Quotes gld
\end_inset

oder
\begin_inset Quotes grd
\end_inset

, einem Symbol 
\begin_inset Formula $\to$
\end_inset

 für das 
\begin_inset Quotes gld
\end_inset

wenn ...
 dann
\begin_inset Quotes grd
\end_inset

 sowie den Klammersymbolen 
\begin_inset Formula $($
\end_inset

 und 
\begin_inset Formula $)$
\end_inset

 lassen sich die Feststellungen in Sätzen einer formalen Sprache formulieren.
 
\begin_inset Formula $\mathcal{A}$
\end_inset

 lautet dann 
\begin_inset Formula $(K\to(\neg C))$
\end_inset

, 
\begin_inset Formula $\mathcal{B}$
\end_inset

 lautet 
\begin_inset Formula $(C\wedge K)$
\end_inset

, 
\begin_inset Formula $\mathcal{C}$
\end_inset

 lautet 
\begin_inset Formula $((\neg C)\vee(\neg K))$
\end_inset

 und 
\begin_inset Formula $\mathcal{D}$
\end_inset

 lautet 
\begin_inset Formula $((\neg C)\wedge(\neg K))$
\end_inset

.
 Setzt man voraus, dass Aussagen, dargestellt durch die Symbole 
\begin_inset Formula $K$
\end_inset

 oder 
\begin_inset Formula $C$
\end_inset

 jeweils nur einen der beiden Wahrheitswerte 
\begin_inset Formula $\mathtt{wahr}$
\end_inset

 oder 
\begin_inset Formula $\mathtt{falsch}$
\end_inset

 annehmen können, so lässt sich durch Ersetzen der Aussagesymbole durch
 die Wahrheitswerte und Bilden aller Kombinationsmöglichkeiten für einen
 Satz herausfinden, ob bspw.
 
\begin_inset Formula $\mathcal{C}$
\end_inset

 und 
\begin_inset Formula $\mathcal{D}$
\end_inset

 das gleiche Aussagen, also logisch äquivalent sind oder nicht.
\end_layout

\begin_layout Standard
Eine formale Sprache der Logik erlaubt es, Ungenauigkeiten und Mehrdeutigkeiten
 einer natürlicher Sprachen zu vermeiden.
\end_layout

\begin_layout Subsection
Die Sprache 
\begin_inset Formula $\mathcal{L}^{PROP}$
\end_inset


\end_layout

\begin_layout Standard
In der Literatur werden Sprachen der Aussagenlogik, je nach thematischem
 Schwerpunkt, geringfügig unterschiedlich definiert.
 Im Folgenden wird der Ansatz von 
\begin_inset CommandInset citation
LatexCommand cite
key "Witt2013,Enderton2001"

\end_inset

 wiedergegeben.
\end_layout

\begin_layout Standard
Die formale Sprache 
\begin_inset Formula $\mathcal{L}^{PROP}$
\end_inset

 der Aussagenlogik ist ein 4-Tupel 
\begin_inset Formula $\mathcal{L}^{PROP}:=(\Sigma,\mathcal{S},\mathcal{T},\sigma)$
\end_inset

.
 Dabei ist das Grundalphabet 
\begin_inset Formula $\Sigma:=\left\{ \neg,(,),\wedge,\vee,\to,\#\right\} \cup V$
\end_inset

 eine endliche, nichtleere Menge von Symbolen.
 Das Symbolalphabet 
\begin_inset Formula $V$
\end_inset

 mit 
\begin_inset Formula $\Sigma\cap V=\emptyset$
\end_inset

 ist nichtleer, endlich und dient der Konstruktion von Worten welche für
 Aussagen stehen.
 Die Menge der Aussagesymbole 
\begin_inset Formula $\mathcal{S}\subseteq(\Sigma)^{*}$
\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Auch 
\emph on
atomare Aussagen
\emph default
 oder 
\emph on
primitive Propositionen
\emph default
 genannte.
\end_layout

\end_inset

 ist induktiv wie folgt definiert:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha\in V\Rightarrow\alpha\in\mathcal{S}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha\in\mathcal{S}\Rightarrow\alpha\#\in\mathcal{S}$
\end_inset

 
\end_layout

\begin_layout Itemize
nicht sonst gehört zu 
\begin_inset Formula $\mathcal{S}$
\end_inset


\end_layout

\begin_layout Remark
In der Definition von 
\begin_inset Formula $\mathcal{S}$
\end_inset

 steht die Variable 
\begin_inset Formula $\alpha$
\end_inset

 stellvertretender für ein Zeichen aus dem Symbolalphabet 
\begin_inset Formula $V$
\end_inset

.
 Hingegen ist 
\begin_inset Formula $\#$
\end_inset

 das Zeichen selbst.
\end_layout

\begin_layout Standard
Die Menge 
\begin_inset Formula $\mathcal{T}\subseteq(\Sigma)^{*}$
\end_inset

 der aussagenlogischen Formeln ist induktiv wie folgt definiert:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha\in\mathcal{S}\Rightarrow\alpha\in\mathcal{T}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\alpha,\beta\in\mathcal{T}\Rightarrow\begin{cases}
\neg\alpha & \in\mathcal{T}\\
(\alpha\wedge\beta) & \in\mathcal{T}\\
(\alpha\vee\beta) & \in\mathcal{T}\\
(\alpha\to\beta) & \in\mathcal{T}
\end{cases}$
\end_inset


\end_layout

\begin_layout Itemize
Nichts sonst gehört zu 
\begin_inset Formula $\mathcal{T}$
\end_inset


\end_layout

\begin_layout Standard
Die durch die kontextfreie Grammatik 
\begin_inset Formula $G=(\left\{ F\right\} \cap\mathcal{S},\left\{ (,),\neg,\to,\wedge,\vee,\mathtt{w},\mathtt{f}\right\} ,F\to\thinspace\mathcal{S}\thinspace|\thinspace(F\wedge F)\thinspace|\thinspace(F\vee F)\thinspace|\thinspace(F\to F)\thinspace|\thinspace\neg F)$
\end_inset

 erzeugte Sprache 
\begin_inset Formula $\mathcal{\mathtt{L}}^{PROP}=L(G)$
\end_inset

 ist mit der durch 
\begin_inset Formula $\mathcal{T}$
\end_inset

 festgelegten Syntax von 
\begin_inset Formula $\mathcal{L}^{PROP}$
\end_inset

 äquivalent.
\begin_inset Marginal
status open

\begin_layout Plain Layout

\series bold
Beweis!
\end_layout

\end_inset


\end_layout

\begin_layout Remark
Durch die Klammerung wird die Rangfolge der logischen Operatoren festgelegt.
\end_layout

\begin_layout Standard
Die Belegungsfunktion 
\begin_inset Formula $\sigma:\mathcal{S}\to\left\{ \mathtt{wahr},\mathtt{falsch}\right\} $
\end_inset

 ist eine Abbildung welche jedem Aussagesymbol aus 
\begin_inset Formula $\mathcal{S}$
\end_inset

 ein Element aus 
\begin_inset Formula $\left\{ \mathtt{wahr},\mathtt{falsch}\right\} $
\end_inset

 zuweist.
\end_layout

\begin_layout Standard
Die Elemente aus 
\begin_inset Formula $\left\{ \mathtt{wahr},\mathtt{falsch}\right\} $
\end_inset

 lassen sich als Wahrheitswerte natürlichsprachlich interpretieren.
 Steht ein Aussagesymbol 
\begin_inset Formula $\mathtt{x\#\#}$
\end_inset

 für die Aussage 
\begin_inset Quotes gld
\end_inset

Die Probe enthält Kalium
\begin_inset Quotes grd
\end_inset

 und lautet die Belegung 
\begin_inset Formula $\sigma(\mathtt{x\#\#})=\mathtt{falsch}$
\end_inset

, so wäre die naheliegende, natürlichsprachliche Interpretation, dass die
 Aussage 
\begin_inset Quotes gld
\end_inset

Die Probe enthält Kalium
\begin_inset Quotes grd
\end_inset

 falsch ist.
 Um aussagenlogischen Formeln eine Semantik zu geben, wird eine Auswertungsfunkt
ion 
\begin_inset Formula $\varLambda:\mathcal{S}\to\left\{ \mathtt{true},\mathtt{false}\right\} $
\end_inset

 definiert.
 Diese bildet auf Basis von 
\begin_inset Formula $\sigma$
\end_inset

 jede aussagenlogische Formeln auf ein Element aus 
\begin_inset Formula $\left\{ \mathtt{true},\mathtt{false}\right\} $
\end_inset

ab.
 Für alle 
\begin_inset Formula $A\in\mathcal{S}$
\end_inset

 und 
\begin_inset Formula $\alpha,\beta\in\mathcal{T}$
\end_inset

 ist 
\begin_inset Formula $\varLambda$
\end_inset

 rekursiv folgend definiert:
\begin_inset Formula 
\begin{eqnarray*}
\varLambda_{\sigma}(A) & := & \sigma(A)\\
\varLambda_{\sigma}(\neg A):=\mathtt{wahr} & :\Longleftrightarrow & \varLambda_{\sigma}(A):=\mathtt{falsch}\\
\varLambda_{\sigma}(A\wedge B):=\mathtt{wahr} & :\Longleftrightarrow & \varLambda_{\sigma}(A)=\varLambda_{\sigma}(B)=\mathtt{wahr}\\
\varLambda_{\sigma}(A\vee B):=\mathtt{falsch} & :\Longleftrightarrow & \varLambda_{\sigma}(A)=\varLambda_{\sigma}(B)=\mathtt{falsch}\\
\varLambda_{\sigma}(A\to B):=\mathtt{falsch} & :\Longleftrightarrow & \varLambda_{\sigma}(A)=\mathtt{wahr}\text{ und }\varLambda_{\sigma}(B)=\mathtt{falsch}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Eine Formel 
\begin_inset Formula $\alpha$
\end_inset

 wird genau dann tautologisch bzw.
 Tautologie genannt, wenn für alle Belegungen 
\begin_inset Formula $\sigma$
\end_inset

 gilt, dass 
\begin_inset Formula $\varLambda_{\sigma}(\alpha)=\mathtt{wahr}$
\end_inset

 ist.
 Eine Formel 
\begin_inset Formula $\alpha$
\end_inset

 ist genau dann 
\emph on
erfüllbar
\emph default
, wenn eine Belegung 
\begin_inset Formula $\sigma$
\end_inset

 existiert, so dass 
\begin_inset Formula $\varLambda_{\sigma}(\alpha)=\mathtt{wahr}$
\end_inset

 ist.
 Genau dann wird 
\begin_inset Formula $\alpha$
\end_inset

 
\emph on
kontradiktorisch
\emph default
 genannt, wenn für alle Belegungen 
\begin_inset Formula $\sigma$
\end_inset

, gilt dass 
\begin_inset Formula $\varLambda_{\sigma}(\alpha)=\mathtt{falsch}$
\end_inset

 ist.
 Für zwei Formeln 
\begin_inset Formula $\alpha,\beta$
\end_inset

 spricht man von 
\emph on

\begin_inset Formula $\alpha$
\end_inset

 impliziert 
\begin_inset Formula $\beta$
\end_inset


\emph default
, im Zeichen 
\begin_inset Formula $\alpha\models\beta$
\end_inset

, genau dann wenn aus 
\begin_inset Formula $\varLambda_{\sigma}(\alpha)=\mathtt{wahr}$
\end_inset

 folgt 
\begin_inset Formula $\varLambda_{\sigma}(\beta)=\mathtt{wahr}$
\end_inset

.
 Zwei Formeln 
\begin_inset Formula $\alpha,\beta$
\end_inset

 heißen 
\emph on
logisch äquivalent
\emph default
, im Zeichen 
\begin_inset Formula $\alpha\equiv\beta$
\end_inset

 genau dann wenn für alle Belegungen 
\begin_inset Formula $\sigma$
\end_inset

 gilt, dass 
\begin_inset Formula $\varLambda_{\sigma}(\alpha)=\varLambda_{\sigma}(\beta)$
\end_inset

.
\end_layout

\begin_layout Example
Sei ein Symbolalphabet 
\begin_inset Formula $V:=\left\{ \mathtt{x}\right\} $
\end_inset

 und eine Belegung 
\begin_inset Formula $\sigma(\mathtt{x)}=\mathtt{wahr}$
\end_inset

,
\begin_inset Formula $\sigma(\mathtt{x\#)}=\mathtt{falsch}$
\end_inset

 gewählt.
 Dann sind 
\begin_inset Formula $\mathtt{x},\mathtt{x\#\in}\mathcal{S}$
\end_inset

 Aussagesymbole und 
\begin_inset Formula $\alpha=((\neg\mathtt{x}\vee\mathtt{x\#})\wedge\mathtt{x\#})\in\mathcal{T}$
\end_inset

 eine aussagenlogische Formel der Sprache.
 Mit der Auswertungsfunktion ergibt sich der Wahrheitswert 
\begin_inset Formula $\varLambda(\alpha)$
\end_inset

 wie folgt:
\begin_inset Formula 
\begin{eqnarray*}
\varLambda(\mathtt{x})=\sigma(\mathtt{x})=\mathtt{wahr}\Rightarrow\varLambda(\neg\mathtt{x}) & = & \mathtt{falsch}\\
\varLambda(\mathtt{x\#})=\sigma(\mathtt{x\#}) & = & \mathtt{falsch}\\
\varLambda((\neg\mathtt{x}\vee\mathtt{x\#})) & = & \mathtt{falsch}\\
\varLambda((\neg\mathtt{x}\vee\mathtt{x\#})\wedge\mathtt{x\#}))=\varLambda(\alpha) & = & \mathtt{falsch}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Example
Für eine Formel 
\begin_inset Formula $\beta$
\end_inset

 lässt sich auf umgekehrtem Weg mittels 
\begin_inset Formula $\varLambda$
\end_inset

 beantworten, ob eine Belegung 
\begin_inset Formula $\sigma$
\end_inset

 existiert, so dass bspw.
 
\begin_inset Formula $\varLambda(\beta)=\mathtt{wahr}$
\end_inset

 ist.
 Sei 
\begin_inset Formula $\beta:=(\neg(\mathtt{x}\vee\mathtt{x\#})\wedge(\mathtt{x}\to\neg\mathtt{x\#\#}))$
\end_inset

 und sei eine Belegung 
\begin_inset Formula $\sigma$
\end_inset

 gesucht damit 
\begin_inset Formula $\varLambda(\beta)=\mathtt{wahr}$
\end_inset

:
\end_layout

\begin_layout Example
\begin_inset Formula 
\begin{eqnarray*}
\varLambda(\beta)=\mathtt{wahr} & \Rightarrow & \varLambda(\neg(\mathtt{x}\vee\mathtt{x\#}))\text{=\mathtt{wahr} und }\varLambda((\mathtt{x}\to\neg\mathtt{x\#\#}))=\mathtt{wahr}\\
\varLambda(\neg(\mathtt{x}\vee\mathtt{x\#}))=\mathtt{wahr} & \Rightarrow & \varLambda(\mathtt{x}\vee\mathtt{x\#})=\mathtt{falsch}\\
\varLambda(\mathtt{x}\vee\mathtt{x\#})=\mathtt{falsch} & \Rightarrow & \varLambda(\mathtt{x})=\varLambda(\mathtt{x\#})=\mathtt{falsch}\\
\varLambda(\mathtt{x}\to\neg\mathtt{x\#\#})=\mathtt{wahr} & \Rightarrow & \varLambda(\mathtt{x})=\mathtt{wahr}\text{ Widerspruch!}
\end{eqnarray*}

\end_inset

Damit existiert keine Belegung, so dass 
\begin_inset Formula $\varLambda(\beta)=\mathtt{wahr}$
\end_inset

 gilt, 
\begin_inset Formula $\varLambda(\beta)=\mathtt{wahr}$
\end_inset

 ist 
\emph on
nicht erfüllbar
\emph default
.
\end_layout

\begin_layout Example
Damit liegt mit 
\begin_inset Formula $\mathcal{L}^{PROP}$
\end_inset

 eine formale Sprache der Aussagenlogik vor, in welcher Formeln, bestehend
 aus logischen Aussagen formuliert werden können.
 Da laut Voraussetzung das Symbolalphabet 
\begin_inset Formula $V$
\end_inset

 endlich ist, ist auch 
\begin_inset Formula $\Sigma$
\end_inset

 endlich.
\end_layout

\begin_layout Example
Erfüllbarkeit + Kompaktheitssatz.
\end_layout

\begin_layout Section
Eine modale Logik 
\begin_inset Formula $\mathcal{L}_{\mathfrak{K}}$
\end_inset


\end_layout

\begin_layout Standard
Einführung der Sprache und Semantik / Kripke Strukturen, 
\begin_inset CommandInset citation
LatexCommand cite
key "ModLogBlackRijke02"

\end_inset


\end_layout

\begin_layout Section
Repräsentation von Ungewissheit
\end_layout

\begin_layout Standard
Beantworten der Frage (im technischen Sinne): Was ist Wissen? Was ist glauben?
 Wie lässt sich dies formal repsäsentieren? Einführung möglicher Welten
 
\begin_inset Formula $W$
\end_inset

, eines Wahrscheinlichkeitsmaßes sowie des Wahrscheinlichkeitsraums 
\begin_inset Formula $(W,\mathcal{F},\mu)$
\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
after "2.1"
key "HalpernReason05"

\end_inset


\end_layout

\begin_layout Section
Eine epistemische Logik für mehrere Agenten
\end_layout

\begin_layout Standard
Einführung der Sprache 
\begin_inset Formula $\mathcal{L}_{n}^{K}(\Phi)$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
after "7.2.1"
key "HalpernReason05"

\end_inset


\end_layout

\begin_layout Subsection
Eine Semantik der epistemischen Logik für mehrere Agenten [
\begin_inset Formula $\mathcal{N}$
\end_inset

,
\begin_inset Formula $M=(W,\mathcal{K}_{1},\cdots,\pi)$
\end_inset

, Referenzierung der Repräsentation von Ungewissheit, der Mehr-Agenten Modallogi
k sowie Kripke-Strukturen]
\end_layout

\begin_layout Subsection
Eine Axiomatisierung der epistemischen Logik [Betrachten der Sätze 
\begin_inset Formula $K,T,D,4,5$
\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
after "7.2.3"
key "HalpernReason05"

\end_inset

]
\end_layout

\begin_layout Section
Erweiterung der epistemischen Logik für mehrere Agenten um Wahrscheinlichkeiten
\end_layout

\begin_layout Subsection
Ein Einführendes Beispiel [Veranschaulichung anhand eines Beispiels (Monty
 Hall)]
\end_layout

\begin_layout Subsection
Die Sprache 
\begin_inset Formula $\mathcal{L}_{n}^{QU}$
\end_inset

 der epistemischen probabilistischen Logik für mehrere Agenten [
\begin_inset CommandInset citation
LatexCommand cite
after "7.3"
key "HalpernReason05"

\end_inset

]
\end_layout

\begin_layout Subsection
Eine Semantik für 
\begin_inset Formula $\mathcal{L}_{n}^{QU}$
\end_inset

 [
\begin_inset Formula $\mathcal{M}_{n}^{prob}$
\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
after "7.3"
key "HalpernReason05"

\end_inset

]
\end_layout

\begin_layout Subsection
Die vollständige Axiomatisierung der epistemischen probabilistischen Logik
 für mehrere Agenten [
\begin_inset CommandInset citation
LatexCommand cite
after "7.3"
key "HalpernReason05"

\end_inset

] 
\end_layout

\begin_layout Chapter
Darstellung eines dynamischen Systemes der Wissenslogik mit Wahrscheinlichkeiten
\end_layout

\begin_layout Section
Einführung in die Dynamik über Wahrscheinlichkeiten [Anschauliche Einführung
 Anhand von Beispielen]
\end_layout

\begin_layout Section
Eine Logik mit öffentlichen Bekanntmachungen [
\begin_inset Formula $PAL$
\end_inset

, 
\begin_inset CommandInset citation
LatexCommand cite
after "2.1, 8.1"
key "LogDynBenth12"

\end_inset

]
\end_layout

\begin_layout Subsection
Erweiterung der im ersten Teil eingeführten epistemischen Logik [Gemeinsames
 Wissen: 
\begin_inset Formula $C_{G}\varphi$
\end_inset

, Erweiterung der Semantik um die Erreichbarkeitsrelation 
\begin_inset Formula $\to_{i}$
\end_inset

, Pointed Models 
\begin_inset Formula $(M,s)$
\end_inset

, Aktualisierungen 
\begin_inset Formula $[!P]K_{i}\varphi$
\end_inset

]
\end_layout

\begin_layout Subsection
Eine Axiomatisierung von 
\begin_inset Formula $PAL$
\end_inset

 
\end_layout

\begin_layout Section
Formale Einführung der Logik 
\begin_inset Formula $DEL$
\end_inset


\end_layout

\begin_layout Subsection
Epistemische Eventmodelle [
\begin_inset Formula $E=(E,\left\{ \sim_{i}\right\} _{i\in G},\left\{ Pre_{e}\right\} _{e\in E},e)$
\end_inset

,
\begin_inset CommandInset citation
LatexCommand cite
after "4.2"
key "LogDynBenth12"

\end_inset

]
\end_layout

\begin_layout Subsection
Einführung und Analyse der Produkt-Aktualisierung 
\end_layout

\begin_layout Subsection
Eine vollständige Axiomatisierung der Logik 
\begin_inset Formula $DEL$
\end_inset


\end_layout

\begin_layout Section
Revision und Analyse verschiedener Arten von Aktualisierungen [Stichworte:
 Bedingte Wahrscheinlichkeiten / Bayes' Regel, Jeffrey Rule, Produkt-Aktualisier
ung]
\end_layout

\begin_layout Section
Erweiterung von 
\begin_inset Formula $DEL$
\end_inset

 um probabilistische Produkt-Aktualsierung
\end_layout

\begin_layout Subsection
Erweiterung des Eventmodells
\end_layout

\begin_layout Subsection
Einführung der probabilistischen Produkt-Aktualisierung
\end_layout

\begin_layout Subsection
Analyse des Systems anhand eines komplexen Beispiels
\end_layout

\begin_layout Section
Ein vollständiges Axiomensystem der dynamischen epistemischen probabilistischen
 Logik
\end_layout

\begin_layout Chapter
Diskussion aktueller Forschungsfragen der dynamischen epistemischen probabilisti
schen Logik
\end_layout

\begin_layout Chapter
Zusammenfassung und Fazit
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "literature"
options "alphadin"

\end_inset


\end_layout

\end_body
\end_document
